version: '3'

services:

  mysql:
    container_name: db
    hostname: mysql
    image: mysql:8
    environment:
      DATABASES: $WORDPRESS_DB_NAME $WEBMAIL_DB_NAME
      MYSQL_RANDOM_ROOT_PASSWORD: 1
    env_file:
      - .env
    volumes:
      - db:/var/lib/mysql
      - ./utils/mysql:/docker-entrypoint-initdb.d:ro
    # MYSQL 8 needs this for proper auth the `wp_cli`.
    command: --default-authentication-plugin=mysql_native_password

  smtp:
    container_name: smtp
    hostname: smtp
    image: tozd/postfix:alpine-38
    restart: always
    expose:
      - '$SMTP_PORT/tcp'
    environment:
      ROOT_ALIAS: $ADMIN_NAME@$EMAIL_DOMAIN
      # MAILNAME becomes myhostname
      MAILNAME: $EMAIL_DOMAIN
      MY_DESTINATION: $$myhostname localhost.$$mydomain
    env_file:
      - .env
    volumes:
      - smtp_mail:/var/spool/postfix
      - ./tmp/smtp/log:/var/log/postfix
      - ./utils/smtp/config.sh:/etc/service/postfix/run.config:ro

  imap:
    container_name: imap
    hostname: imap
    depends_on:
      - smtp
    image: dovecot/dovecot
    expose:
      - '$IMAP_AUTH_PORT/tcp'
      - '143/tcp'
    volumes:
      - imap_mail:/srv/mail
      - imap_etc:/etc/dovecot
      - ./utils/imap/dovecot.conf:/etc/dovecot/dovecot.conf:ro
      - ./utils/imap/passwd:/etc/dovecot/passwd:ro

  webmail:
    container_name: webmail
    image: roundcube/roundcubemail
    depends_on:
      - smtp
      - imap
      - mysql
    ports:
      - $LOCALHOST:$WEBMAIL_LOCAL_PORT:80
    environment:
      ROUNDCUBEMAIL_DEFAULT_HOST: imap
      ROUNDCUBEMAIL_SMTP_SERVER: smtp
      ROUNDCUBEMAIL_SMTP_PORT: $SMTP_PORT
      ROUNDCUBEMAIL_DB_TYPE: mysql
      ROUNDCUBEMAIL_DB_HOST: mysql
      ROUNDCUBEMAIL_DB_NAME: $WEBMAIL_DB_NAME
      ROUNDCUBEMAIL_DB_USER: $ADMIN_NAME
      ROUNDCUBEMAIL_DB_PASSWORD: $ADMIN_PASSWORD
    env_file:
      - .env
    volumes:
      - webmail_html:/var/www/html
      - webmail_config:/var/roundcube/config
      - webmail_db:/var/roundcube/db
      - webmail_tmp:/tmp/roundcube-temp

  # Wordpress. Main service.
  wp:
    container_name: wp
    image: wordpress:$WP_VERSION-apache
    depends_on:
      - mysql
      - webmail
    ports:
      - $LOCALHOST:$WP_LOCAL_PORT:80
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: $ADMIN_NAME
      WORDPRESS_DB_PASSWORD: $ADMIN_PASSWORD
    env_file:
      - .env
    volumes:
      - wp_core:$WP_CORE_DIR
      - ./cormorant:$WP_CORE_DIR/wp-content/plugins/cormorant:ro
      - ./tests:$TESTS_SUITE_DIR/tests:ro
      - ./tmp/composer:$TESTS_SUITE_DIR/composer
      - ./tmp/wp:$TESTS_SUITE_DIR/wp
      - ./utils/wp:/opt/utils:ro
      - ./utils/wp-config-extra.php:/opt/wp-config-extra.php:ro
  
  # WP CLI configures the Wordpress.
  wp-cli:
    container_name: wp-cli
    image: wordpress:cli
    depends_on:
      - wp
    user: xfs
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: $ADMIN_NAME
      WORDPRESS_DB_PASSWORD: $ADMIN_PASSWORD
    env_file:
      - .env
    volumes:
      - wp_core:$WP_CORE_DIR
      - ./utils/wp-cli:/opt/utils:ro
      # wp-cli uses `wp-config.php` from wp service, that includes this.
      - ./utils/wp-config-extra.php:/opt/wp-config-extra.php:ro
    command: /opt/utils/wp-config.sh
  
  # PHP Composer installs the tests suite.
  composer:
    container_name: composer
    image: composer:latest
    depends_on:
      - wp
    env_file:
      - .env
    volumes:
      - ./tmp/composer:/app
      - ./tmp/wp:$TESTS_SUITE_DIR/wp
      - ./utils/composer:/opt/utils:ro
    command: /opt/utils/setup.sh

volumes:
  db:
  smtp_mail:
  imap_mail:
  imap_etc:
  webmail_html:
  webmail_config:
  webmail_db:
  webmail_tmp:
  wp_core:
